rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    function onlyAffectedFieldsAre(request, keys) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(keys)
    }

    match /users/{userId}/{anyUserFile=**} {
      allow update: if isAuthenticated() && request.auth.uid == userId && (onlyAffectedFieldsAre(request,["imageUrl"]) || onlyAffectedFieldsAre(request,["token"]));
      allow create: if isAuthenticated() && onlyAffectedFieldsAre(request,["token"]);
      allow read: if isAuthenticated();
    }

    match /friendships/{friendshipId}/{anyUserFile=**} {
      function isParticipating() {
        return request.auth.uid in resource.data.users
      }

      allow read: if isAuthenticated() && isParticipating();
      allow delete: if isAuthenticated() && isParticipating();
    }

    match /dishes/{dishId} {
      function isCreator() {
        return resource.data.createdBy == request.auth.uid;
      }

      function isCreatedForAuthenticatedUser(request) {
        return request.resource.data.createdBy == request.auth.uid;
      }

      function usersAreFriends() { 
        return exists(path("/databases/"+database+"/documents/friendships/"+resource.data.createdBy+"__"+request.auth.uid)) 
          || exists(path("/databases/"+database+"/documents/friendships/"+request.auth.uid+"__"+resource.data.createdBy))
      }


      allow read: if isAuthenticated() && (isCreator() || usersAreFriends());
      allow create: if isAuthenticated() && isCreatedForAuthenticatedUser(request);
      allow update: if isAuthenticated() && isCreator() && onlyAffectedFieldsAre(request,["imageUrl","name", "ingredients"]);
      allow delete: if isAuthenticated() && isCreator();
    }


    match /friendRequests/{requestId}/{anyFile=**} {
      function isSender() {
        return request.auth.uid == resource.data.senderId
      }
      function isReceiver() {
        return request.auth.uid == resource.data.receiverId
      }
      allow read: if request.auth != null && (isSender() || isReceiver());
    }

  }

}